---
interface Props {
  title: string;
  borderColor: string;
  width: string;
  height: string;
  align?: boolean;
  blue?: boolean;
}

const { title, borderColor, width, height, align, blue } = Astro.props;
---

<div
  id="big-div"
  class={`p-6 bg-[#383838] rounded-lg ${borderColor} ${blue ? "hover-blue" : ""}`}
  style={`
  display: block;
  width: ${width};
  height: ${height};
  text-align: ${align ? "center" : "left"};
  box-shadow: 0 0 10px ${borderColor}, 0 0 20px ${borderColor}, 0 0 30px ${borderColor}, 0 0 40px ${borderColor}`}
>
  <h2 id="h2-card" class="text-xl font-bold mb-4 text-white">{title}</h2>
  <div class="text-gray-300 slot-container">
    <slot />
  </div>
</div>
<script>
  const h2Card = document.getElementById("h2-card");
  const bigDiv = document.getElementById("big-div");

  if (h2Card && h2Card.textContent?.trim() === "") {
    bigDiv?.removeChild(h2Card);
  }
</script>

<style>
  .slot-container {
    transition: none;
  }
  div {
    margin: 0;
    cursor: pointer;
  }
  #big-div {
    transition: transform 0.2s ease-in-out;
    margin: 10px;
  }
  #big-div:hover {
    transform: scale(1.1);
  }
  .hover-blue h2,
  .hover-blue .slot-container {
    color: white;
    transition: color 0.2s ease-in-out;
  }

  .hover-blue:hover h2,
  .hover-blue:hover .slot-container {
    color: #1a88ff;
    transition: color 0.2s ease-in-out;
  }

  @media (max-width: 1024px) {
    div {
      background-color: #000;
      color: #000;
      height: 100vh;
      width: 100vw;
      z-index: 99;
    }
  }

  @media (max-width: 1470px) {
    html,
    body {
      display: block;
      background: black;
      color: white;
      text-align: center;
      height: 100vh;
      width: 100vw;
      display: flex;
      justify-content: center;
      align-items: center;
    }
    body::before {
      content: "La versión móvil no se encuentra disponible en este momento";
    }
  }
</style>
